name: Build and Deploy MyPC App

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Install and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run type-check
        continue-on-error: true  # Don't fail the build for type errors during initial setup

      - name: Expo Doctor
        run: npx expo doctor

  build-preview:
    name: Build Preview
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Build preview for Android
        run: eas build --platform android --profile preview --non-interactive
        env:
          EAS_BUILD_AUTOCOMMIT: 1

      - name: Build preview for iOS
        run: eas build --platform ios --profile preview --non-interactive
        env:
          EAS_BUILD_AUTOCOMMIT: 1

      - name: Comment PR with build links
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Preview builds are being generated! Check your Expo dashboard for download links.'
            })

  build-production:
    name: Build Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Build production for Android
        run: eas build --platform android --profile production --non-interactive
        env:
          EAS_BUILD_AUTOCOMMIT: 1

      - name: Build production for iOS
        run: eas build --platform ios --profile production --non-interactive
        env:
          EAS_BUILD_AUTOCOMMIT: 1

      - name: Notify Slack (optional)
        if: success()
        run: |
          echo "ðŸŽ‰ Production build completed successfully!"
          # Add Slack webhook here if needed
          # curl -X POST -H 'Content-type: application/json' --data '{"text":"MyPC App production build completed!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

  submit-to-stores:
    name: Submit to App Stores
    runs-on: ubuntu-latest
    needs: build-production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Submit to Google Play Store
        run: eas submit --platform android --latest --non-interactive
        env:
          GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

      - name: Submit to Apple App Store
        run: eas submit --platform ios --latest --non-interactive
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}

  update-ota:
    name: Publish OTA Update
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Publish OTA update
        run: eas update --branch preview --message "OTA update from GitHub Actions"
